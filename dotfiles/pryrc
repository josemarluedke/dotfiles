#!/usr/bin/env ruby

Pry.config.editor = "mvim -v"

Pry.config.prompt = proc do |obj, level, _|
  prompt = ""
  prompt << "#{Rails.version}@" if defined?(Rails)
  prompt << "#{RUBY_VERSION}"
  "#{prompt} (#{obj})> "
end

Pry.config.exception_handler = proc do |output, exception, _|
  output.puts "\e[31m#{exception.class}: #{exception.message}"
  output.puts "from #{exception.backtrace.first}\e[0m"
end

if defined?(Rails)
  %w(rails/console/app rails/console/helpers).each { |f| require f }
  TOPLEVEL_BINDING.eval("self").extend ::Rails::ConsoleMethods

  def factory_load!
    require "factory_girl"
    FactoryGirl.factories.clear
    load File.join(Rails.root, "spec/support/factories.rb")
    true
  end
end

begin
  require "awesome_print"
  Pry.config.print = proc { |output, value| Pry::Helpers::BaseHelpers.stagger_output("=> #{value.ai}", output) }
rescue LoadError => err
   warn "=> Unable to load awesome_print"
end
